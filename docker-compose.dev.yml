services:
  word-app-api:
    env_file: .env
    build:
      context: .
      dockerfile: Dockerfile.dev
      args:
        - TMZN=Europe/Berlin
    container_name: word-app-api
    ports:
      - "5000:80"
    environment:
      DB_NAME: ${DB_NAME}
      DB_HOST: word-app-db
      DB_USER: ${DB_USER}
      DB_PASSWD: ${DB_USER_PASSWORD}
      EMAIL_SENDER_PSWD: ${EMAIL_SENDER_PSWD}
      SECRET_KEY: ${APP_SECRET}
    restart: on-failure
    depends_on: [ word-app-database ]
    develop:
      watch:
        - action: sync
          path: ./
          target: /var/www/html/word-app/api
    volumes:
      - .:/var/www/html/word-app/api
    networks:
      - word-app-network

  word-app-database:
    env_file: .env
    image: mysql:latest
    container_name: word-app-db
    ports:
      - "3306:3306"
    environment:
      DATABASE_NAME: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_ROOT_PASSWORD: ${DB_ADMIN_PASSWORD}
    command: ["--character-set-server=utf8mb4","--collation-server=utf8mb4_unicode_ci"]
    volumes:
      - word-app-data:/var/lib/mysql
    networks:
      - word-app-network
  
  database_seed:
    env_file: .env
    depends_on: [ word-app-database ]
    build: ./database/
    environment:
      DATABASE_NAME: ${DB_NAME}
      MYSQL_ROOT: root
      MYSQL_ROOT_PASSWORD: ${DB_ADMIN_PASSWORD}
      MYSQL_USER: ${DB_USER}
      USER_PASSWORD: ${DB_USER_PASSWORD}
      MYSQL_HOST: word-app-db
      MYSQL_PORT: ${DB_PORT}
      TMZN: Europe/Berlin
    command: --rm
    networks:
      - word-app-network

volumes:
  word-app-data:

networks:
  word-app-network:
    name: word-app-network
    driver: bridge